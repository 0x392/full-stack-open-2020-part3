{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filter","onChange","value","PersonForm","onSubmit","newName","newNumber","onChangeNewName","onChangeNewNumber","type","PersonList","persons","setPersons","person","name","toLowerCase","indexOf","map","filteredPerson","key","onClick","window","confirm","personService","p","Person","number","Notification","message","color","style","border","borderRadius","marginBottom","padding","content","App","useState","setNewName","setNewNumber","setFilter","setMessage","useEffect","initialPersons","event","target","preventDefault","existingPerson","find","confirmMsg","changedPerson","setTimeout","catch","error","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.189fbe0d.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nexport default { getAll, create, remove, update };\n","import React, { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={onChange} />\n    </div>\n  );\n};\n\nconst PersonForm = ({\n  onSubmit,\n  newName,\n  newNumber,\n  onChangeNewName,\n  onChangeNewNumber,\n}) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={onChangeNewName} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={onChangeNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst PersonList = ({ persons, setPersons, filter }) => {\n  const handleClick = (person) => () => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(person.id)\n        .then(() => setPersons(persons.filter((p) => p.id !== person.id)));\n    }\n  };\n\n  return persons\n    .filter(\n      (person) => person.name.toLowerCase().indexOf(filter.toLowerCase()) > -1\n    )\n    .map((filteredPerson) => (\n      <Person\n        key={filteredPerson.name}\n        person={filteredPerson}\n        onClick={handleClick(filteredPerson)}\n      />\n    ));\n};\n\nconst Person = ({ person, onClick }) => {\n  return (\n    <p>\n      {person.name} {person.number} <button onClick={onClick}>delete</button>\n    </p>\n  );\n};\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  const color = message.type === \"successful\" ? \"green\" : \"red\";\n  const style = {\n    border: `1px solid ${color}`,\n    borderRadius: \".5rem\",\n    color: color,\n    marginBottom: \".5rem\",\n    padding: \".5rem\",\n  };\n  return <div style={style}>{message.content}</div>;\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  function handleNameChange(event) {\n    setNewName(event.target.value);\n  }\n\n  function handleNumberChange(event) {\n    setNewNumber(event.target.value);\n  }\n\n  function handleFilterChange(event) {\n    setFilter(event.target.value);\n  }\n\n  function addPerson(event) {\n    event.preventDefault();\n\n    const existingPerson = persons.find((person) => newName === person.name);\n    if (existingPerson) {\n      const confirmMsg = `${newName} is already added to phonebook, replace the old number with a new one?`;\n      if (window.confirm(confirmMsg)) {\n        const changedPerson = {\n          ...existingPerson,\n          number: newNumber,\n        };\n        personService\n          .update(existingPerson.id, changedPerson)\n          .then(() => {\n            setPersons(\n              persons.map((p) =>\n                p.id !== existingPerson.id ? p : changedPerson\n              )\n            );\n            setMessage({\n              type: \"successful\",\n              content: `The number of ${newName} is changed`,\n            });\n            setTimeout(() => setMessage(null), 2500);\n          })\n          .catch((error) => {\n            setMessage({\n              type: \"unsuccessful\",\n              content: `Information of ${newName} has already been removed from server`,\n            });\n            setTimeout(() => setMessage(null), 2500);\n          });\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else {\n      const personObject = { name: newName, number: newNumber };\n      personService.create(personObject).then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setMessage({ type: \"successful\", content: `Added ${newName}` });\n        setTimeout(() => setMessage(null), 2500);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      });\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter filter={filter} onChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        onSubmit={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        onChangeNewName={handleNameChange}\n        onChangeNewNumber={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <PersonList persons={persons} setPersons={setPersons} filter={filter} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}